name=demo-service
system=demo-system

# -------------------- httpServer ---------------------
agent.server.enabled=true
agent.server.port=9900
agent.health.readiness.enabled=true
#agent.progress.forwarded.headers=X-Forwarded-For
observability.tracings.sampledByQPS=10
observability.tracings.tag.response.headers.eg.0=X-EG-Circuit-Breaker
observability.tracings.tag.response.headers.eg.1=X-EG-Retryer
observability.tracings.tag.response.headers.eg.2=X-EG-Rate-Limiter
observability.tracings.tag.response.headers.eg.3=X-EG-Time-Limiter

## region plugin
# -------------------- plugin global config ---------------------
plugin.observability.global.tracing.enabled=true
plugin.observability.global.metric.enabled=true
plugin.observability.global.metric.interval=10
plugin.observability.global.metric.topic=application-metrics
plugin.observability.global.metric.url=/application-metrics

## [noop|console|http]: for debug, console can be used
plugin.observability.global.metric.appendType=console

## add service name to header enabled by name for easemesh
plugin.integrability.global.addServiceNameHead.enabled=true

## redirect the middleware address when env has address, see: com.mawen.agent.plugin.api.middleware.RedirectProcessor
## about redirect: jdbc, kafka, kafka, rabbitmq, redis

plugin.integrability.global.redirect.enabled=true
plugin.integrability.global.forwarded.enabled=true
plugin.hook.global.foundation.enabled=true

plugin.observability.global.log.enabled=true
plugin.observability.global.log.topic=application-log
plugin.observability.global.log.url=/application-log
plugin.observability.global.log.appendType=console
plugin.observability.global.log.level=INFO
plugin.observability.global.log.encoder=LogDataJsonEncoder

plugin.observability.global.log.encoder.timestamp=%d{UNIX_MILLIS}
plugin.observability.global.log.encoder.logLevel=%-5level
plugin.observability.global.log.encoder.threadId=%thread
plugin.observability.global.log.encoder.location=%logger{36}
plugin.observability.global.log.encoder.message=%msg%n%xEx{3}

## region elasticsearch
# -------------------- elasticsearch redirect ---------------------
plugin.integrability.elasticsearch.redirect.enable=true
plugin.observability.elasticsearch.tracing.enabled=true
plugin.observability.elasticsearch.metric.enabled=true
plugin.observability.elasticsearch.metric.interval=30
plugin.observability.elasticsearch.metric.topic=platform-metrics
plugin.observability.elasticsearch.metric.url=/platform-metrics
#plugin.observability.elasticsearch.metric.appendType=topic

## endregion

## endregion

## region output config
# -------------------- output config ---------------------
## http/kafka/zipkin server host and port for tracing and metric
## example:
## http: [http|https]://127.0.0.1:8080/report
## kafka: 192.168.1.2:9092,192.168.1.3:9092,192.168.1.4:9092
## zipkin: [http|https]://127.0.0.1:8080/zipkin

reporter.outputServer.bootstrapServer=http://127.0.0.1:9092
reporter.outputServer.appendType=console
reporter.outputServer.timeout=1000

## enabled=false/true, disable or enable output tracing and metric

reporter.outputServer.enabled=true

## username and password for http basic auth

reporter.outputServer.username=
reporter.outputServer.password=

## enabled=false/true: disable or enable tls
## key, cert, ca_cert is enabled when tls.enabled=ture

reporter.outputServer.tls.enabled=false
reporter.outputServer.tls.key=
reporter.outputServer.tls.cert=
reporter.outputServer.tls.ca_cert=

## redefine to output properties

reporter.log.output.messageMaxBytes=999900
reporter.log.output.reportThread=1
reporter.log.output.queuedMaxSpans=1000
reporter.log.output.queuedMaxSize=1000000
reporter.log.output.messageTimeout=1000

## log sender appendType config
## enable=false/true: disable or enable sender
## [http|kafka|console] send to http server/kafka/console
## url is only for http
## example:
## reporter.outputServer.bootstrapServer=http://127.0.0.1:8080/report
## reporter.tracing.sender.url=/tracing
## final output url: http://127.0.0.1/report/tracing

reporter.log.sender.enabled=ture
reporter.log.sender.appendType=console
reporter.log.sender.url=/application-log

## tracing sender appendType config
## enable=false/true: disable or enable sender
## [http|kafka|console] send to http server/kafka/console
## topic for kafka use

reporter.tracing.sender.enabled=true
reporter.tracing.sender.appendType=console
reporter.tracing.sender.topic=application-tracing-log
reporter.tracing.encoder=SpanJsonEncoder

## redefine to output properties

reporter.tracing.output.messageMaxBytes=999900
reporter.tracing.output.reportThread=1
reporter.tracing.output.queuedMaxSpans=1000
reporter.tracing.output.queuedMaxSize=1000000
reporter.tracing.output.messageTimeout=1000

## metric sender appendType config
## [http|kafka|zipkin]: send to http server/kafka/console
## url is only for http
## example:
## reporter.outputServer.bootstrapServer=http://127.0.0.1:8080/report
## reporter.tracing.sender.url=/tracing
## final output url: http://127.0.0.1/report/tracing

reporter.metric.sender.appendType=http
reporter.metric.sender.url=/metrics

## endregion
